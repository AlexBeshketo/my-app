{"version":3,"file":"static/js/338.6cefe508.chunk.js","mappings":"gKACA,G,QAAA,CAAgB,KAAO,sBAAsB,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,iBAAmB,kCAAkC,WAAa,4BAA4B,IAAM,qBAAqB,IAAM,qBAAqB,KAAO,sBAAsB,KAAO,wB,gDCqC/a,MAxBA,YAAkE,IAAhDA,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,cAGxB,OAEI,iBAAKC,UAAWC,EAAAA,KAAhB,WACI,gBAAKC,MAAO,CAACC,UAAW,SAAUC,WAAY,QAA9C,UACI,wCAEJ,gBAAKJ,UAAWC,EAAAA,cAAhB,SACKH,EAASO,KAAI,SAACC,GAAD,OACV,SAACC,EAAD,CAAoBC,KAAMF,EAAEE,KAAMC,QAASH,EAAEG,QAASC,GAAIJ,EAAEI,IAA9CJ,EAAEI,UAIxB,gBAAKV,UAAWC,EAAAA,iBAAhB,UACI,SAACU,EAAA,EAAD,CAAsBC,WAAY,aAAcC,QAASd,UAW5DQ,EAAU,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,KAAUC,GAAgC,EAApCC,GAAoC,EAAhCD,SAG/B,OACI,+BACI,gBAAKT,UAAWC,EAAAA,KAAhB,UACI,iBAAKS,GAAIT,EAAAA,WAAT,WACI,gBAAKD,UAAWC,EAAAA,IAAhB,UACI,SAACa,EAAA,EAAD,CAAQC,GAAI,CAACC,MAAO,GAAIC,OAAQ,IACxBC,IAAI,6EAEhB,iBAAKlB,UAAWC,EAAAA,IAAhB,WACI,0BAAK,0BAAOO,OACZ,gBAAKR,UAAWC,EAAAA,QAAhB,UAA2B,0BAAOQ,OAClC,iBAAKT,UAAWC,EAAAA,MAAhB,WACI,6BAAM,SAACkB,EAAA,EAAD,CAAoBnB,UAAWC,EAAAA,KAAQmB,MAAO,YAApD,QACA,6BAAM,SAACC,EAAA,EAAD,CAAWrB,UAAWC,EAAAA,OAA5B,qB,oBCE5B,GAAeqB,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACC,GACnB,MAAO,CACH1B,SAAU0B,EAAMC,YAAY3B,YAKP,CAACC,cAAAA,EAAAA,IAC1B2B,EAAAA,EAFJ,CAEsBC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Dialogs_main__5NNjU\",\"dialogs\":\"Dialogs_dialogs__WTCAs\",\"usersList\":\"Dialogs_usersList__tZy2H\",\"user\":\"Dialogs_user__8ZZ8t\",\"messages\":\"Dialogs_messages__h3jrF\",\"message\":\"Dialogs_message__v4ap8\",\"img\":\"Dialogs_img__5D4uB\",\"addMessageBorder\":\"Dialogs_addMessageBorder__uZEbw\",\"talkbubble\":\"Dialogs_talkbubble__QX5bv\",\"one\":\"Dialogs_one__x3SAr\",\"two\":\"Dialogs_two__MgvyW\",\"item\":\"Dialogs_item__F7DvV\",\"logo\":\"Dialogs_logo__6OTvo\"};","import React from \"react\";\r\nimport {AllDialogsPropsType} from \"../DialogsContainer\";\r\nimport h from '../Dialogs.module.css'\r\nimport {TextInputMessageForm} from \"../../Profile/Posts/AddPostForm/TextInputMessageForm\";\r\nimport {Avatar} from \"@mui/material\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\nimport {MessagesPropsType} from \"../../../state/messages-reducer\";\r\n\r\n\r\n//\r\n// const ws=new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'  )\r\n\r\n\r\nfunction Dialogs({messages, addNewMessage}: AllDialogsPropsType) {\r\n\r\n\r\n    return (\r\n\r\n        <div className={h.main}>\r\n            <div style={{textAlign: 'center', paddingTop: '30px'}}>\r\n                <h4>Messages</h4>\r\n            </div>\r\n            <div className={h.messages_item}>\r\n                {messages.map((d) =>\r\n                    <Message key={d.id} user={d.user} message={d.message} id={d.id}/>\r\n                )}\r\n\r\n            </div>\r\n            <div className={h.addMessageBorder}>\r\n                <TextInputMessageForm buttonType={'addMessage'} addPost={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n\r\nexport const Message = ({user, id, message}: MessagesPropsType) => {\r\n\r\n    const imageURl='https://upload.wikimedia.org/wikipedia/commons/3/33/Mr._Bean_2011.jpg'\r\n    return (\r\n        <>\r\n            <div className={h.item}>\r\n                <div id={h.talkbubble}>\r\n                    <div className={h.one}>\r\n                        <Avatar sx={{width: 56, height: 56}}\r\n                                src='https://upload.wikimedia.org/wikipedia/commons/3/33/Mr._Bean_2011.jpg'/>\r\n                    </div>\r\n                    <div className={h.two}>\r\n                        <div><span>{user}</span></div>\r\n                        <div className={h.message}><span>{message}</span></div>\r\n                        <div className={h.icons}>\r\n                            <span><FavoriteBorderIcon className={h.logo} color={'primary'}/> </span>\r\n                            <span><ShareIcon className={h.logo}/> </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","import {addNewMessage, MessagesPropsType} from \"../../state/messages-reducer\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../state/redux-store\";\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\nimport {getStatusThunkCreator, getUserProfileThunkCreator, updateStatusThunkCreator} from \"../../state/profile-reducer\";\r\n\r\n// type DialogsContainerType = {\r\n//     store: StorePropsType\r\n// }\r\n// export function DialogsContainer(props: DialogsContainerType) {\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store: StorePropsType) => {\r\n//\r\n//                     const getState = store.getState()\r\n//\r\n//                     const addPost = () => {\r\n//                         store.dispatch(AddNewMessageActionCreator())\r\n//                     }\r\n//\r\n//                     const onChangeCallback = (text: string) => {\r\n//                         store.dispatch(updateNewMessageActionCreator(text))\r\n//                     }\r\n//\r\n//                     return (\r\n//\r\n//                         <Dialogs users={getState.dialogsPage.users} messages={getState.dialogsPage.messages}\r\n//                                  newMessagesBody={getState.dialogsPage.newMessagesBody}\r\n//                                  addPost={addPost} onChangeCallback={onChangeCallback}/>)\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n//\r\n// }\r\n\r\n\r\ntype MSTPType = {\r\n    messages: Array<MessagesPropsType>,\r\n}\r\n\r\ntype MDTPType = {\r\n    addNewMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type AllDialogsPropsType = MSTPType & MDTPType\r\n\r\nlet mapStateToProps = (state: AppStateType): MSTPType => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    WithAuthRedirect)(Dialogs)\r\n\r\n\r\n"],"names":["messages","addNewMessage","className","h","style","textAlign","paddingTop","map","d","Message","user","message","id","TextInputMessageForm","buttonType","addPost","Avatar","sx","width","height","src","FavoriteBorder","color","Share","compose","connect","state","dialogsPage","WithAuthRedirect","Dialogs"],"sourceRoot":""}